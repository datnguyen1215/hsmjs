name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        type: choice
        description: 'Type of version increment'
        required: true
        default: 'patch'
        options:
          - patch
          - minor
          - major
      release_notes:
        type: string
        description: 'Optional custom release notes (will be added to auto-generated changelog)'
        required: false

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  release:
    name: Manual Release Process
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      tag_name: ${{ steps.version.outputs.tag_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Calculate new version
        id: version
        run: |
          current_version=$(node -p "require('./package.json').version")
          echo "Current version: $current_version"

          IFS='.' read -ra VERSION_PARTS <<< "$current_version"
          major=${VERSION_PARTS[0]}
          minor=${VERSION_PARTS[1]}
          patch=${VERSION_PARTS[2]}

          case "${{ github.event.inputs.version_type }}" in
            "major")
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            "minor")
              minor=$((minor + 1))
              patch=0
              ;;
            "patch")
              patch=$((patch + 1))
              ;;
          esac

          new_version="$major.$minor.$patch"
          tag_name="v$new_version"

          echo "New version: $new_version"
          echo "Tag name: $tag_name"

          echo "current_version=$current_version" >> $GITHUB_OUTPUT
          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.version.outputs.version }}"

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Create and push git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git tag ${{ steps.version.outputs.tag_name }}
          git push origin main
          git push origin ${{ steps.version.outputs.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ${{ github.event.inputs.release_notes && github.event.inputs.release_notes || 'Automated release' }}

            **Version Information:**
            - Version bump: ${{ steps.version.outputs.current_version }} â†’ ${{ steps.version.outputs.version }}
            - NPM Package: [@datnguyen1215/hsmjs@${{ steps.version.outputs.version }}](https://www.npmjs.com/package/@datnguyen1215/hsmjs/v/${{ steps.version.outputs.version }})
          draft: false
          prerelease: false
          generate_release_notes: true